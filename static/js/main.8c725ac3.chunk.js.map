{"version":3,"sources":["components/note/context.js","components/note/ActionBtn.js","components/note/Note.js","components/note/TaskInput.js","components/note/reducer.js","components/note/Notes.js","components/calc/Calc.js","components/Navbar.js","App.js","index.js"],"names":["Context","React","createContext","ActionBtn","task","dispatch","useContext","className","done","onClick","type","payload","id","width","height","fill","xmlns","viewBox","points","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Note","taskDone","title","date","TaskInput","useState","input","setInput","addTaskItem","onKeyPress","e","key","onChange","target","value","state","action","length","Date","toLocaleDateString","map","item","filter","Notes","useReducer","reducer","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","activeTasksNumber","Provider","Calc","Navbar","list","DB","to","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c725ac3.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();","import React, {useContext} from 'react';\nimport {Context} from \"./context\";\n\nexport const ActionBtn = ({task}) =>{\n\n    const {dispatch} = useContext(Context);\n\n    return(\n        <div className=\"action-btn\">\n            {!task.done ? (<p onClick={()=> dispatch({type: \"DONE_TASK\", payload: task.id})}><svg width=\"16\" height=\"16\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\n                        stroke=\"#25AD39\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    />\n                </svg>\n                </p>)\n                : (<p onClick={()=> dispatch({type: \"DELETE_TASK\", payload: task.id})}><svg width=\"14\" height=\"14\"  fill=\"#FF1317\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 371.23 371.23\">\n                    <polygon points=\"371.23,21.213 350.018,0 185.615,164.402 21.213,0 0,21.213 164.402,185.615 0,350.018 21.213,371.23\n\t                                185.615,206.828 350.018,371.23 371.23,350.018 206.828,185.615 \"/>\n                </svg>\n                </p>)\n            }\n        </div>\n    )\n};","import React from 'react';\nimport {ActionBtn} from \"./ActionBtn\";\n\nexport const Note =({task})=> {\n\n    const taskDone = 'task ' + (task.done ? 'task-done' : '');\n\n    return(\n        <div className={taskDone}>\n            <div className='tasks'>\n                <p>{task.title}</p>\n                <small>{task.date}</small>\n            </div>\n            <ActionBtn task={task}/>\n        </div>\n    )\n};","import React, {useState, useContext} from 'react';\nimport {Context} from \"./context\";\n\nexport const TaskInput = () => {\n\n    const {dispatch} = useContext(Context);\n\n    const [input, setInput] = useState('');\n\n    const addTaskItem = () =>{\n        if (input){\n            dispatch({\n                type: \"ADD_TASK\",\n                payload: input\n            });\n        }\n        setInput(input);\n        setInput('');\n    };\n\n    const onEnterPress = (e) =>{\n        if (e.key === 'Enter'){\n            addTaskItem();\n        };\n    };\n\n    return(\n        <div className='task-input'>\n            <input onKeyPress={onEnterPress} onChange={e=> setInput(e.target.value)} value={input} type=\"text\"/>\n            <button onClick={addTaskItem}>ADD</button>\n        </div>\n    )\n};","export default function (state, action){\n    switch (action.type) {\n        case \"ADD_TASK\":\n            return [\n                ...state,\n                {\n                    id: state.length, date: new Date().toLocaleDateString(), title: action.payload, done: false\n                }\n            ];\n        case \"DONE_TASK\":\n            return state.map(item => {\n                if (action.payload === item.id){\n                    item.done = !item.done\n                }\n                return item;\n            });\n        case \"DELETE_TASK\":\n            return state.filter(item => item.id !== action.payload);\n        default:\n            return state;\n    }\n}","import React, {useEffect, useReducer} from 'react';\n\nimport {Note} from \"./Note\";\nimport {TaskInput} from \"./TaskInput\";\nimport {Context} from \"./context\";\nimport reducer from './reducer';\n\nexport const Notes =()=>{\n\n    const [state, dispatch] = useReducer(reducer, JSON.parse(localStorage.getItem('value')));\n\n\n    useEffect(()=> {\n        localStorage.setItem('value', JSON.stringify(state));\n    }, [state]);\n\n    const doneTask = id => {\n        dispatch({\n            type: \"DONE_TASK\",\n            payload: id\n        });\n    };\n\n    const deleteTask = id =>{\n        dispatch({\n            type: \"DELETE_TASK\",\n            payload: id\n        });\n    };\n\n    const addTask = task =>{\n        dispatch({\n            type: \"ADD_TASK\",\n            payload: task\n        });\n    };\n\n    const activeTasksNumber = (state.filter(item => !item.done)).length;\n\n\n    return (\n        <Context.Provider value={{\n            dispatch\n        }}>\n            <div className='App'>\n                <h1 className=\"top\">Active tasks: {activeTasksNumber}</h1>\n                {state.map((task) => {\n                    if (!task.done) {\n                        return(\n                            <Note key={task.id} task={task}/>\n                        )\n                    }\n\n                })}\n                {state.map((task) => {\n                    if (task.done) {\n                        return(\n                            <Note key={task.id} task={task}/>\n                        )\n                    }\n\n                })}\n                <TaskInput />\n            </div>\n        </Context.Provider>\n    );\n};\n","import React, {useState} from 'react';\n\nexport const Calc =()=>{\n\n\n\n    return(\n        <div>\n            <p>Здесь будет калькулятор</p>\n            Пока доделываю Спиcок задач\n        </div>\n    )\n};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nimport './Navbar.scss'\nimport DB from '../store/DB'\n\nexport const Navbar =()=>{\n\n    const list = DB.list;\n\n    return(\n        <div className='navbar'>\n            <div>Calc&Notes</div>\n\n            <ul>\n                {list.map(item=> <li key={item.id}><NavLink  to={item.to}>{item.title}</NavLink></li>)}\n\n                {/*<li><NavLink to='/'>{x[0]}</NavLink></li>*/}\n                {/*<li><NavLink to='/calc'>Calc</NavLink></li>*/}\n            </ul>\n        </div>\n    )\n};","import React from 'react';\nimport {Notes} from \"./components/note/Notes\";\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Calc} from \"./components/calc/Calc\";\nimport {Navbar} from \"./components/Navbar\";\n\nexport const App =()=>{\n\n  return (\n      <Router>\n          <Navbar/>\n        <div className='container'>\n            <Switch>\n                <Route  path={'/notes'} component={Notes}/>\n                <Route path={'/calc'} component={Calc}/>\n            </Switch>\n        </div>\n      </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss'\nimport {App} from './App';\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}